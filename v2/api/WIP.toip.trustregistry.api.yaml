openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/darrellodonnell/ToIP.TrustRegistry/0.1.0
info:
  description: |
    TODO: update description
  version: "0.2.0"
  title: Trust Over IP Trust Registry Protocol (RESTful API) v2 
  contact:
    email: darrell.odonnell@continuumloop.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  # - name: admins
  #   description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
  - name: new-v2-query
    description: QUERY centric operations.
  - name: new-v2-lookup
    description: LOOKUP centric operations.
paths:
  # /Governance:
  #   get:
  #     tags: 
  #       - developers
  #     summary: returns link to governance frameworks that this Trust Registry supports

 
  /v1/query/getofflinefile:
    get:
      tags:
        - developers
      summary: Access a full data file that can be used offline.
      operationId: getOfflineFile
      description: |
        Allows querying to determine the status of an Issuer, as identified by their Identifier (unique), 
        credential type, and EGF that they are operating under.
      responses:
        '200':
          description: JSON file array of offline list of Issuers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfflineCopy'
        # '401':
        #   $ref: '#/components/responses/Unauthorized'
  /query/entity-authorization:  # TODO: decide path or query for parameters...
    get:
      tags:
        -  new-v2-query
      summary: Determine whether an Entity has a particular Authorization.
      parameters:
        - in: query
          name: entitydid 
          required: true
          schema:
            $ref: '#/components/schemas/Uri'
          description: |
            The URI-based identifier of a DID or X.509 Issuer. Allows reserved characters per RFC3986. 
            Do **NOT** escape the URI.
          allowReserved: true # allow reserved characters per RFC3986
        - in: query
          name: right 
          required: true
          schema:
            $ref: '#/components/schemas/Uri'
          description: |
            The identifier of the Authorization that is being queried.
          allowReserved: true # allow reserved characters per RFC3986
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLACEHOLDER'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /query/recognized-registry:  # TODO: decide URI or Identifier (DID) for other TRs
    get:
      tags:
        -  new-v2-query
      summary: Query this Trust Registry about its recognition of another Trust Registry
      parameters:
        - in: query
          name: trustregistryidentifier 
          required: true
          schema:
            $ref: '#/components/schemas/Uri'
          description: |
            The URI-based identifier of a DID or X.509 Issuer. Allows reserved characters per RFC3986. 
            Do **NOT** escape the URI.
          allowReserved: true # allow reserved characters per RFC3986
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryQueryType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /query/resource:  # TODO: decide path or query for parameters...
    get:
      tags:
        -  new-v2-query
      summary: Get resource data indicated by DID.
      parameters:
        - in: query
          name: entitydid 
          required: true
          schema:
            $ref: '#/components/schemas/Uri'
          description: |
            The URI-based identifier of a DID or X.509 Issuer. Allows reserved characters per RFC3986. 
            Do **NOT** escape the URI.
          allowReserved: true # allow reserved characters per RFC3986
        
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLACEHOLDER'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /lookup/rights:
    
    get:
      tags:
        -  new-v2-lookup
      summary: Get a list of Rights that are used in this Trust Registry.
      parameters:
        - in: query
          name: egfURI 
          required: true
          schema:
            $ref: '#/components/schemas/Uri'
          description: |
            The URI-based identifier of a DID or X.509 Issuer. Allows reserved characters per RFC3986. 
            Do **NOT** escape the URI.
          allowReserved: true # allow reserved characters per RFC3986
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLACEHOLDER'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /lookup/didmethods:
    
    get:
      tags:
        -  new-v2-lookup
      summary: Get a list of DID Methods that are supported by a particular Governance Framework.
      parameters:
        - in: query
          name: egfURI 
          required: true
          schema:
            $ref: '#/components/schemas/Uri'
          description: |
            The URI-based identifier of a DID or X.509 Issuer. Allows reserved characters per RFC3986. 
            Do **NOT** escape the URI.
          allowReserved: true # allow reserved characters per RFC3986
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLACEHOLDER'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  # /lookup/credentialtypes/:
  #   get:
  #     tags:
  #       -  new-v2
  #     summary: Get a list of credential types for a particular governance framework
  #     parameters:
  #       - in: query
  #         name: egfURI 
  #         required: true
  #         schema:
  #           $ref: '#/components/schemas/Uri'
  #         description: The URI-based identifier of a DID or X.509 Issuer. Allows reserved characters per RFC3986. Do not escape the URI.
  #         allowReserved: true # allow reserved characters per RFC3986
  #     responses:
  #       '200':
  #         description: search results matching criteria
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/PLACEHOLDER'
  #       # '400':
  #       #   $ref: '#/components/responses/BadRequest'
  #       # '401':
  #       #   $ref: '#/components/responses/Unauthorized'
  #       # '404':
  #       #   $ref: '#/components/responses/NotFound'
  # /lookup/resourcetypes/:
  #   get:
  #     tags:
  #       -  new-v2-lookup
  #     summary: Get a list of Presentation Requests - and (?roles?) that is expected to use it - types 
  #       for a particular governance framework.
  #     parameters:
  #       - in: query
  #         name: identifier 
  #         required: true
  #         schema:
  #           $ref: '#/components/schemas/Uri'
  #         description: The URI-based identifier of a DID or X.509 Issuer. Allows reserved characters per RFC3986. Do not escape the URI.
  #         allowReserved: true # allow reserved characters per RFC3986
  #     responses:
  #       '200':
  #         description: search results matching criteria
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/PLACEHOLDER'
  #       # '400':
  #       #   $ref: '#/components/responses/BadRequest'
  #       # '401':
  #       #   $ref: '#/components/responses/Unauthorized'
  #       # '404':
  #       #   $ref: '#/components/responses/NotFound'
  /lookup/assurancelevels:
    
    get:
      tags:
        -  new-v2-lookup
      summary: Get a list of the assurance levels that are in use by this Trust Registry (and its governing EGF).
      parameters:
        - in: query
          name: egfURI 
          required: true
          schema:
            $ref: '#/components/schemas/Uri'
          description: |
            The URI-based identifier of a DID or X.509 Issuer. Allows reserved characters per RFC3986. 
            Do **NOT** escape the URI.
          allowReserved: true # allow reserved characters per RFC3986
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLACEHOLDER'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  # /lookup/resources:
  #   get:
  #     tags:
  #       -  new-v2-lookup
  #     summary: Get a resource by ID
  #     parameters:
  #       - in: query
  #         name: identifier 
  #         required: true
  #         schema:
  #           $ref: '#/components/schemas/Uri'
  #         description: The URI-based identifier of a DID or X.509 Issuer. Allows reserved characters per RFC3986. Do not escape the URI.
  #         allowReserved: true # allow reserved characters per RFC3986
  #     responses:
  #       '200':
  #         description: search results matching criteria
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/PLACEHOLDER'
  #       # '400':
  #       #   $ref: '#/components/responses/BadRequest'
  #       # '401':
  #       #   $ref: '#/components/responses/Unauthorized'
  #       # '404':
  #       #   $ref: '#/components/responses/NotFound'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotAcceptable:
      description: Not Acceptable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Conflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    InternalServerError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    default:
      description: Generic Error
  schemas:
    # IdentifierCheck:
    #   type: object
    #   required:
    #     - identifier
    #     - credentialType
    #     - governanceFrameworkURI
    #   properties:
    #     identifier:
    #       type: string
    #       format: URI
    #       example: 'did:example:123'
    #     credentialType:
    #       type: string
    #     governanceFrameworkURI:
    #       type: string
    #       format: URI
    #       example: 'did:example:456'
    #     validAt:
    #       type: string
    #       format: date-time
    Uri:
      type: string
      format: uri
      description: string providing an URI formatted according to IETF RFC 3986.
    PLACEHOLDER:
      type: string
      format: uri
      description: TODO REPLACE.
    AuthorizationType:
      type: object 
      required:
        - identifier 
        - simplename
        - description
      properties:
        identifier:
          type: string
          format: URI
          example: 'did:example:123'
        simplename: 
          type: string
        description:
          type: string
        assuranceLevel: 
          type: string
          description: Assurance Level .name 
          example: "ca:PCTF:governmentid:CAL3"
    ResourceType:
      type: object
      description: Resource data as identified by identifier. 
      required: 
        - identifier
        - lastupdated
        - datatype
      properties:
        identifier:
          type: string
          format: URI
          example: 'did:example:123'
        lastupdated:
          type: string
          format: date-time #RFC 3339, Section 5.6
        datatype:
          description: |
            The `kind` of resource (e.g. credential-definition, schema-definition, revocation-registry). intended
            to be used by recipient for processing of the data payload. 
          type: string
        payloadJSON:
          type: object 
          description: JSON object 

    MetadataType:
      type: object
      required: 
        - lastupdated
      properties:
        lastupdated:
          type: string
          format: date-time #RFC 3339, Section 5.6
        languages: # TODO: create Object with default-language
          type: array
          description: language codes (RFC 4646 - https://datatracker.ietf.org/doc/html/rfc4646)
          items: 
            type: string
          example: 
            - "en"
            - "en-CA"
            - "fr-CA"
    # TODO: apply AssuranceLevel to Authorization.
    AssuranceLevel: 
      type: object
      description: |
        Creates assurance level as a top-level/first-class-citizen of a Trust Registry.
      required:
        - identifier
        - name
        - description
      properties:
        identifier:
          type: string
          format: URI
          example: 'did:example:123'
        name: 
          type: string
          example: "LOA2"
        description:
          type: string
          example: "Level of Assurance 2 - see EGF for definition, terms, obligations, liabilities, and indemnity"
    RegistryQueryType:
      type: object
      description: |
        Data structure for basic Trust Registry indication of what the queried TR will state about another TR.
      required: 
        - identifier
        - name
      properties:
        identifier:
          type: string
          format: URI
          example: 'did:example:123'
        name: 
          type: string
          example: "Professional Engineers Ontario"
        description:
          type: string
          example: "Established on June 14, 1922, Professional Engineers Ontario (PEO) is the licensing and regulating body for professional engineering in the province."
        peerType:
          type: string
          enum:
            - peer
            - superior 
            - subordinate  
            - metaregistry
          description: >
            Relationship types - how does the TR that is being queried consider the other TR.
              * peer - registy is recognized as a peer under another jurisdiction or governance mechanism.
              * superior - registry is above this TR in a hierarchy.
              * subordinate - registry is subordinate to this TR in a hierarchy.
              * metaregistry - registry being queried is considered (by this TR) to be a metaregistry (aka registry of registries)
          
    IdentifierResponse:
      type: object
      required:
        - identifier
        - credentialType
        - governanceFrameworkURI
        - status
        - validFromDT
      properties:
        identifier:
          type: string
          format: URI
          example: 'did:example:123'
        entityType:
          type: string
          enum: [issuer, verifier, trustregistry]
          description: 'Indicates the entity type that the identifier applies to. Principally intended for the offline use case to indicate type.'
        credentialType:
          type: string
        governanceFrameworkURI:
          type: string
          format: URI
          example: 'did:example:456'
        DIDDocument:
          type: string
          format: URI
          description: 'Provides a URI that resolves to the DID Document for the Identifier.'
        validFromDT:
          type: string
          format: date-time
          description: 'Indicates that the Identifier status applies at the indicated time. A time in the past indicates when the last status change was recorded in the Trust Registry.'
        validUntilDT:
          type: string
          format: date-time
          description: 'Indicates the Issuers validity ends/ended at this date and time. A time in the past indicates when the last status change was recorded in the Trust Registry.'
        status: 
          type: string
          enum: [current, expired, terminated, revoked]
          description: |
            Provides a current status for entity (issuer or verifier)
            - current - the entity is currently authorized, as of time of the query.
            - expired - entity rights have expired.
            - terminated - entity has voluntarily ceased Issuer role under the specific EGF.
            - revoked - entity authority under specific EGF was terminated by the governing authority.
        statusDetail:
          type: string
          description: "Optional free text that expands on the status parameter."
    OfflineCopy:
      type: object
      required: 
        - validAtDT
        - items
      properties:
        validAtDT:
          type: string
          format: date-time
          description: The date-time that the extraction file is current as of. This may be the date-time of the data extraction
        items:
          type: array
          items:
            $ref: '#/components/schemas/IdentifierResponse'
    ProblemDetails:
      description: A Problem Details object (RFC 7807)
      type: object
      properties:
        type:
          type: string
          format: uri
          description: An absolute URI that identifies the problem type
          default: about:blank  # kept for backwards-compatibility, type will be mandatory in problem-v2
        title:
          type: string
          description: A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: An absolute URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
security:
  - bearerAuth: [] # apply to full API
  #ADJUST - remove prescriptive - and add verbiage to support
  # future use of VC/DIDAuth/etc. 
  #